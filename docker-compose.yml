version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8080
    networks:
      - app_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=db
      - DB_PORT=5432  # Fixed port issue
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_DATABASE=address_apartments
      - DB_SYNCHRONIZE=true
    networks:
      - app_network

  db:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: address_apartments
    ports:
      - '5433:5432'
    networks:
      - app_network
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app_network:
    driver: bridge

volumes:
  pg_data:
